import {
  require_react
} from "./chunk-VJA5E53X.js";
import {
  __commonJS,
  __toESM
} from "./chunk-SNAQBZPT.js";

// node_modules/classnames/index.js
var require_classnames = __commonJS({
  "node_modules/classnames/index.js"(exports, module) {
    (function() {
      "use strict";
      var hasOwn = {}.hasOwnProperty;
      function classNames3() {
        var classes = "";
        for (var i = 0; i < arguments.length; i++) {
          var arg = arguments[i];
          if (arg) {
            classes = appendClass(classes, parseValue(arg));
          }
        }
        return classes;
      }
      function parseValue(arg) {
        if (typeof arg === "string" || typeof arg === "number") {
          return arg;
        }
        if (typeof arg !== "object") {
          return "";
        }
        if (Array.isArray(arg)) {
          return classNames3.apply(null, arg);
        }
        if (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes("[native code]")) {
          return arg.toString();
        }
        var classes = "";
        for (var key in arg) {
          if (hasOwn.call(arg, key) && arg[key]) {
            classes = appendClass(classes, key);
          }
        }
        return classes;
      }
      function appendClass(value, newClass) {
        if (!newClass) {
          return value;
        }
        if (value) {
          return value + " " + newClass;
        }
        return value + newClass;
      }
      if (typeof module !== "undefined" && module.exports) {
        classNames3.default = classNames3;
        module.exports = classNames3;
      } else if (typeof define === "function" && typeof define.amd === "object" && define.amd) {
        define("classnames", [], function() {
          return classNames3;
        });
      } else {
        window.classNames = classNames3;
      }
    })();
  }
});

// node_modules/@rsuite/icons/esm/createSvgIcon.js
var import_react5 = __toESM(require_react());

// node_modules/@rsuite/icons/esm/Icon.js
var import_react4 = __toESM(require_react());
var import_classnames2 = __toESM(require_classnames());

// node_modules/@rsuite/icons/esm/utils/prefix.js
var import_classnames = __toESM(require_classnames());
var prefix = function(pre) {
  return function(className) {
    if (!pre || !className) {
      return "";
    }
    if (Array.isArray(className)) {
      return (0, import_classnames.default)(className.filter(function(name) {
        return !!name;
      }).map(function(name) {
        return "".concat(pre, "-").concat(name);
      }));
    }
    return "".concat(pre, "-").concat(className);
  };
};

// node_modules/@rsuite/icons/esm/utils/useIconContext.js
var import_react2 = __toESM(require_react());

// node_modules/@rsuite/icons/esm/IconProvider.js
var import_react = __toESM(require_react());
var IconContext = (0, import_react.createContext)({});
var IconProvider_default = IconContext.Provider;

// node_modules/@rsuite/icons/esm/utils/useIconContext.js
function useIconContext() {
  var _ref = (0, import_react2.useContext)(IconContext) || {}, _ref_classPrefix = _ref.classPrefix, classPrefix = _ref_classPrefix === void 0 ? "rs-" : _ref_classPrefix, csp = _ref.csp, _ref_disableInlineStyles = _ref.disableInlineStyles, disableInlineStyles = _ref_disableInlineStyles === void 0 ? false : _ref_disableInlineStyles;
  return {
    classPrefix,
    csp,
    disableInlineStyles
  };
}

// node_modules/@rsuite/icons/esm/utils/useClassNames.js
function useClassNames() {
  var classPrefix = useIconContext().classPrefix;
  var className = "".concat(classPrefix, "icon");
  return [
    className,
    prefix(className)
  ];
}

// node_modules/@rsuite/icons/esm/utils/useInsertStyles.js
var import_react3 = __toESM(require_react());

// node_modules/@rsuite/icons/esm/utils/insertCss.js
var containers = [];
var styleElements = [];
function createStyleElement(nonce) {
  var styleElement = document.createElement("style");
  styleElement.setAttribute("type", "text/css");
  styleElement.setAttribute("data-insert-css", "rsuite-icons");
  if (nonce) {
    styleElement.setAttribute("nonce", nonce);
  }
  return styleElement;
}
function insertCss(css) {
  var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  var position = options.prepend === true ? "prepend" : "append";
  var container = options.container || document.querySelector("head");
  if (!container) {
    throw new Error("No container found to insert CSS.");
  }
  var containerId = containers.indexOf(container);
  if (containerId === -1) {
    containerId = containers.push(container) - 1;
    styleElements[containerId] = {};
  }
  var styleElement;
  if (styleElements[containerId][position]) {
    styleElement = styleElements[containerId][position];
  } else {
    styleElement = createStyleElement(options.nonce);
    styleElements[containerId][position] = styleElement;
    if (position === "prepend") {
      container.insertBefore(styleElement, container.firstChild);
    } else {
      container.appendChild(styleElement);
    }
  }
  if (css.charCodeAt(0) === 65279) {
    css = css.slice(1);
  }
  if (styleElement.styleSheet) {
    styleElement.styleSheet.cssText += css;
  } else {
    styleElement.textContent += css;
  }
  return styleElement;
}

// node_modules/@rsuite/icons/esm/utils/useInsertStyles.js
var getStyles = function() {
  var prefix2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "rs-";
  return ".".concat(prefix2, "icon {\n  display: -webkit-inline-box;\n  display: -ms-inline-flexbox;\n  display: inline-flex;\n  -webkit-box-align: center;\n      -ms-flex-align: center;\n          align-items: center;\n  text-rendering: optimizeLegibility;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  vertical-align: middle;\n}\n.").concat(prefix2, "icon[tabindex] {\n  cursor: pointer;\n}\n.").concat(prefix2, "icon-spin {\n  -webkit-animation: icon-spin 2s infinite linear;\n          animation: icon-spin 2s infinite linear;\n}\n.").concat(prefix2, "icon-pulse {\n  -webkit-animation: icon-spin 1s infinite steps(8);\n          animation: icon-spin 1s infinite steps(8);\n}\n.").concat(prefix2, "icon-flip-horizontal {\n  -webkit-transform: scaleX(-1);\n      -ms-transform: scaleX(-1);\n          transform: scaleX(-1);\n}\n.").concat(prefix2, "icon-flip-vertical {\n  -webkit-transform: scaleY(-1);\n      -ms-transform: scaleY(-1);\n          transform: scaleY(-1);\n}\n@-webkit-keyframes icon-spin {\n  0% {\n    -webkit-transform: rotate(0deg);\n            transform: rotate(0deg);\n  }\n  100% {\n    -webkit-transform: rotate(359deg);\n            transform: rotate(359deg);\n  }\n}\n@keyframes icon-spin {\n  0% {\n    -webkit-transform: rotate(0deg);\n            transform: rotate(0deg);\n  }\n  100% {\n    -webkit-transform: rotate(359deg);\n            transform: rotate(359deg);\n  }\n}");
};
var cssInjected = false;
var useInsertStyles = function() {
  var _useIconContext = useIconContext(), csp = _useIconContext.csp, classPrefix = _useIconContext.classPrefix, disableInlineStyles = _useIconContext.disableInlineStyles;
  (0, import_react3.useEffect)(function() {
    if (!cssInjected && !disableInlineStyles) {
      insertCss(getStyles(classPrefix), {
        prepend: true,
        nonce: csp === null || csp === void 0 ? void 0 : csp.nonce
      });
      cssInjected = true;
    }
  }, []);
};
var useInsertStyles_default = useInsertStyles;

// node_modules/@rsuite/icons/esm/Icon.js
function _array_like_to_array(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
  return arr2;
}
function _array_with_holes(arr) {
  if (Array.isArray(arr)) return arr;
}
function _define_property(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _iterable_to_array_limit(arr, i) {
  var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
  if (_i == null) return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _s, _e;
  try {
    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);
      if (i && _arr.length === i) break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null) _i["return"]();
    } finally {
      if (_d) throw _e;
    }
  }
  return _arr;
}
function _non_iterable_rest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _object_spread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    var ownKeys = Object.keys(source);
    if (typeof Object.getOwnPropertySymbols === "function") {
      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }
    ownKeys.forEach(function(key) {
      _define_property(target, key, source[key]);
    });
  }
  return target;
}
function _object_without_properties(source, excluded) {
  if (source == null) return {};
  var target = _object_without_properties_loose(source, excluded);
  var key, i;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }
  return target;
}
function _object_without_properties_loose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }
  return target;
}
function _sliced_to_array(arr, i) {
  return _array_with_holes(arr) || _iterable_to_array_limit(arr, i) || _unsupported_iterable_to_array(arr, i) || _non_iterable_rest();
}
function _unsupported_iterable_to_array(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _array_like_to_array(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(n);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);
}
function filterProps(props) {
  var nextProps = {};
  Object.entries(props).forEach(function(param) {
    var _param = _sliced_to_array(param, 2), key = _param[0], value = _param[1];
    if (typeof value !== "undefined") {
      nextProps[key] = value;
    }
  });
  return nextProps;
}
var Icon = import_react4.default.forwardRef(function(props, ref) {
  var tmp = props.as, Component = tmp === void 0 ? "svg" : tmp, spin = props.spin, pulse = props.pulse, flip = props.flip, _props_fill = props.fill, fill = _props_fill === void 0 ? "currentColor" : _props_fill, className = props.className, rotate = props.rotate, children = props.children, viewBox = props.viewBox, _props_width = props.width, width = _props_width === void 0 ? "1em" : _props_width, _props_height = props.height, height = _props_height === void 0 ? "1em" : _props_height, style = props.style, rest = _object_without_properties(props, [
    "as",
    "spin",
    "pulse",
    "flip",
    "fill",
    "className",
    "rotate",
    "children",
    "viewBox",
    "width",
    "height",
    "style"
  ]);
  var _useClassNames = _sliced_to_array(useClassNames(), 2), componentClassName = _useClassNames[0], addPrefix = _useClassNames[1];
  var _obj;
  var classes = (0, import_classnames2.default)(className, componentClassName, (_obj = {}, _define_property(_obj, addPrefix("spin"), spin), _define_property(_obj, addPrefix("pulse"), pulse), _define_property(_obj, addPrefix("flip-".concat(flip)), !!flip), _obj));
  var rotateStyles = {
    msTransform: "rotate(".concat(rotate, "deg)"),
    transform: "rotate(".concat(rotate, "deg)")
  };
  useInsertStyles_default();
  var svgProps = filterProps({
    width,
    height,
    fill,
    viewBox,
    className: classes,
    style: rotate ? _object_spread({}, rotateStyles, style) : style
  });
  return import_react4.default.createElement(Component, _object_spread({
    "aria-hidden": true,
    focusable: false,
    ref
  }, svgProps, rest), children);
});
Icon.displayName = "Icon";
var Icon_default = Icon;

// node_modules/@rsuite/icons/esm/createSvgIcon.js
function _define_property2(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _object_spread2(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    var ownKeys = Object.keys(source);
    if (typeof Object.getOwnPropertySymbols === "function") {
      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }
    ownKeys.forEach(function(key) {
      _define_property2(target, key, source[key]);
    });
  }
  return target;
}
function createSvgIcon(param) {
  var as = param.as, ariaLabel = param.ariaLabel, displayName = param.displayName, category = param.category;
  var IconComponent = import_react5.default.forwardRef(function(props, ref) {
    return import_react5.default.createElement(Icon_default, _object_spread2({
      "aria-label": ariaLabel,
      "data-category": category,
      ref,
      as
    }, props));
  });
  IconComponent.displayName = displayName;
  return IconComponent;
}
var createSvgIcon_default = createSvgIcon;

export {
  require_classnames,
  IconProvider_default,
  Icon_default,
  createSvgIcon_default
};
/*! Bundled license information:

classnames/index.js:
  (*!
  	Copyright (c) 2018 Jed Watson.
  	Licensed under the MIT License (MIT), see
  	http://jedwatson.github.io/classnames
  *)
*/
//# sourceMappingURL=chunk-6R6JAAOL.js.map
